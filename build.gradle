buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url "http://dl.bintray.com/ipgeolocation/ipgeolocation" }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.1.6"
    id 'java'
    id 'idea'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
}

ext {
    mysqlConnectorVersion = "8.0.20"
    mapstructVersion = "1.3.1.Final"
    lombokVersion = "1.18.12"
    webjarsLocatorVersion = '0.40'
}

dependencyManagement {
    dependencies {
        dependency "org.projectlombok:lombok:${lombokVersion}"
        dependency "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-logging"
    compile.exclude group: 'ch.qos.logback', module: 'logback-classic'
    compile.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'com.auth0:java-jwt:3.10.3'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.5.Final'
    implementation 'org.hibernate.validator:hibernate-validator-annotation-processor:6.1.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: mapstructVersion
    compileOnly group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion
    compile 'org.hibernate:hibernate-search-orm:5.11.7.Final'
    compile group: 'com.cloudinary', name: 'cloudinary-http44', version: '1.5.0'
    compile group: 'com.cloudinary', name: 'cloudinary-taglib', version: '1.5.0'

    implementation 'org.liquibase:liquibase-core'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    runtimeOnly "mysql:mysql-connector-java"

    compileOnly "org.projectlombok:lombok"

    implementation "io.springfox:springfox-boot-starter:3.0.0"
    compile 'io.springfox:springfox-swagger-ui:3.0.0'

    annotationProcessor "org.projectlombok:lombok"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.27.0'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly('org.hsqldb:hsqldb')
}

test {
    useJUnitPlatform()
}
